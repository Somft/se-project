@model ExBook.Models.AddToBookShelf.AddToBookShelfViewModel
@{
    ViewData["Title"] = "Add Book To bookshelf";
}
<style>
    .vertical-center {
       position: relative;
       bottom: 20px;
       right: 20px;
       background-color: darkred;
       color: #FFFFFF;
       padding: 10px;
       border-radius: 10px;
       -moz-border-radius: 10px;
       -webkit-border-radius: 10px;
       margin:20px;
       height: 40px;
         }
</style>
    
<div>
    <div class="card login-card shadow-sm">
        <div class="card-body">
            <h3 class="card-title text-left mb-4 mt-1">Add a book to your bookshelf</h3>
            <hr>
            @if (Model.Message != null)
            {
                <p class="text-danger text-center">@Model.Message</p>
            }
            <form asp-controller="AddToBookshelf" asp-action="Index" method="post">
                <div class="form-group">
                    <label for="Book title:">Name</label>
                    <input asp-for="Name" class=@GetInputClass("Name") placeholder="Harry Potter" type="text">
                    <span asp-validation-for="Name" class="invalid-feedback"></span>
                </div>

                <div class="form-group">
                    <label for="Author:">Author</label>
                    <input asp-for="Author" class=@GetInputClass("Author") placeholder="J.K Rowling" type="text">
                    <span asp-validation-for="Author" class="invalid-feedback"></span>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-6">
                        <label for="Created">Created</label>
                        <input asp-for="Created" class=@GetInputClass("The year of publishment") placeholder="2001" type="text">
                        <span asp-validation-for="Created" class="invalid-feedback"></span>
                    </div>
                </div>
                <div class="form-group">
                     <button type="submit" class="vertical-center">Add this book</button>
                </div>
            </form>
        </div>
    </div>
</div>

@functions {
    private string GetInputClass(string inputName)
    {
        string result = "form-control";

        if (this.ViewData.ModelState[inputName]?.ValidationState == Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid)
        {
            result += " is-invalid";
        }

        return result;
    }
}