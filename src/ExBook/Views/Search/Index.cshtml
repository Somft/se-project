@model ExBook.Models.Search.SearchBookViewModel
@{ ViewData["Title"] = "Search"; }

<div class="card searchbar-card shadow-sm">
    <div class="card-header">
        Search Books
    </div>
    <div class="card-body">
        <form asp-controller="Search" asp-action="Index" method="get">
            <div class="form-row align-items-center">
                <div class="col-auto">
                    <label class="sr-only" for="inlineFormInput">Title</label>
                    <input type="text" class="form-control mb-2" id="FilterTitle" name="FilterTitle" placeholder="Title">
                </div>
                <div class="col-auto">
                    <label class="sr-only" for="inlineFormInputGroup">Author</label>
                    <div class="input-group mb-2">
                        <input type="text" class="form-control" id="FilterAuthor" name="FilterAuthor" placeholder="Author" >
                    </div>
                </div>
                <div class="col-auto">
                    <label class="sr-only" for="inlineFormInputGroup">Author</label>
                    <div class="input-group mb-2">
                        <select asp-for="FilterSubject" asp-items="Model.Subjects" id="FilterSubject">
                            <option value="">All</option>
                        </select>
                    </div>
                </div>
                <div class="col-auto">
                    <div class="form-check mb-2">
                        <input class="form-check-input" id="FilterAvailable" name="FilterAvailable" type="checkbox" value="true" @(Model.FilterAvailable ? "checked=\"checked\"" : "") />
                        <label class="form-check-label" for="autoSizingCheck">
                            Only Available
                        </label>
                    </div>
                </div>

                <div class="col-auto">
                    <button type="submit" class="btn btn-primary mb-2">Search</button>
                </div>
                <div class="col-auto">
                    <button type="reset" class="btn btn-danger mb-2" id="clearSearch">Clear</button>
                </div>
        </form>
        @*<div class="col-auto">
            <form asp-controller="Home" asp-action="Index" method="get">
                <button type="submit" class="btn btn-info mb-2">Return</button>
            </form>
        </div>*@
    </div>
</div>
</div>
<div class="books">
    <table class="table table-striped">
        <tr>
            <th scope="col">Title</th>
            <th scope="col">Author</th>
            <th scope="col">Subject</th>
            <th scope="col">Cover</th>
            <th scope="col">Available</th>
            <th scope="col">Add to wishlist</th>
        </tr>
        @foreach (var book in Model.Books)
        {
            <tr>
                <td>@book.Name</td>
                <td>@book.Author</td>
                <td>
                    @foreach (var subject in book.Subjects)
                    { 
                        @subject.Name <br/>
                    }
                    </td>
                @if (@book.CoverUrl != null)
                {
                    <td>
                        <img src=@book.CoverUrl alt="Cover" style="width:32px;height:32px;" id="test" />
                    </td>
                }
                else
                {
                    <td><img src="https://icons.iconarchive.com/icons/papirus-team/papirus-status/256/image-missing-icon.png" alt="Cover" style="width:32px;height:32px;"></td>
                }
                @if (@book.BookShelfBooks.Count > 0)
                {
                    <form asp-controller="Search" asp-route-id="@book.Id" asp-action="GetBookshelvesForBook" method="post">
                        <td><input type="submit" value="Get this book" title="Show available books" class="btn btn-primary btn-sm " /></td>
                    </form>
                }
                else
                {
                    <td>
                        <span title="Sorry, currently there is no bookshelf containing this book">
                            <div class="disabledGet">
                                <input type="submit" value="Get this book" disabled class="btn btn-secondary btn-sm" />
                            </div>
                        </span>
                    </td>
                }

                @if (!GetIsOnWishlist(Model.UserId, @book))
                {
                    <td>
                        <input type="submit" value="Add to wishlist" title="Add this book to your wishlist" class="btn btn-primary btn-sm" id="@book.Id"
                               onclick="addToWishList('@book.Id');" />
                    </td>

                }
                else
                {
                    <td>
                        <input type="submit" value="Add to wishlist" title="This book is already on your wishlist" class="btn btn-secondary btn-sm"
                               id="@book.Id"
                               onclick="addToWishList('@book.Id');" />
                    </td>
                }
            </tr>
        }

    </table>
</div>


@functions { private bool GetIsOnWishlist(Guid Id, ExBook.Data.Book book)
    {
        return book.WishListBooks.Any(wlb => wlb.WishList.UserId == Id);
    } }

<style>
    /*        .searchbar-card {
            max-width: 500px;
            margin: 0 auto;
        }

        @@media screen and ( min-height: 400px ) {
            .searchbar-card {
                margin-top: calc(50vh - 200px);
            }
        }*/
    .disabledGet {
        pointer-events: none;
    }
</style>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script type="text/javascript">
    function addToWishList(Id) {
        {
            $.ajax({
                url: '/search/AddToWishList',
                data: { Id: Id },
                type: 'POST'
            }).done(function (response) {
                if (response == true) {
                    if ($(document.getElementById(Id)).hasClass('btn-primary')) {
                        $(document.getElementById(Id)).removeClass('btn-primary').addClass('btn-secondary');
                    }
                    else {
                        $(document.getElementById(Id)).removeClass('btn-secondary').addClass('btn-primary');
                    }

                }
            });
        }
    }

    window.onload = function () {
        document.getElementById('FilterTitle').value = "@Model.FilterTitle";
        document.getElementById('FilterAuthor').value = "@Model.FilterAuthor";
    };
</script>
