@model ExBook.Models.Search.SearchBookViewModel
@{ ViewData["Title"] = "Search"; }

<div class="modal fade " id="coverModal" role="dialog"></div>
<div class="card searchbar-card shadow-sm sticky-top">
    <div class="card-header">
        Search Books
    </div>
    <div class="card-body ">
        <form asp-controller="Search" asp-action="Index" method="get">
            <div class="form-row align-items-center">
                <div class="col-auto">
                    <label class="sr-only" for="inlineFormInput">Title</label>
                    <input type="text" class="form-control mb-2" id="FilterTitle" name="FilterTitle" placeholder="Title">
                </div>
                <div class="col-auto">
                    <label class="sr-only" for="inlineFormInputGroup">Author</label>
                    <div class="input-group mb-2">
                        <input type="text" class="form-control" id="FilterAuthor" name="FilterAuthor" placeholder="Author">
                    </div>
                </div>
                <div class="col-auto">
                    <label class="sr-only" for="inlineFormInputGroup">Author</label>
                    <div class="input-group mb-2">
                        <select asp-for="FilterSubject" asp-items="Model.Subjects" id="FilterSubject">
                            <option value="">All</option>
                        </select>
                    </div>
                </div>
                <div class="col-auto">
                    <div class="form-check mb-2">
                        <input class="form-check-input" id="FilterAvailable" name="FilterAvailable" type="checkbox" value="true" @(Model.FilterAvailable ? "checked=\"checked\"" : "") />
                        <label class="form-check-label" for="autoSizingCheck">
                            Only Available
                        </label>
                    </div>
                </div>

                <div class="col-auto">
                    <button type="submit" class="btn btn-primary mb-2">Search</button>
                </div>
                <div class="col-auto">
                    <button type="reset" class="btn btn-danger mb-2" id="clearSearch">Clear</button>
                </div>
        </form>
        @*<div class="col-auto">
                <form asp-controller="Home" asp-action="Index" method="get">
                    <button type="submit" class="btn btn-info mb-2">Return</button>
                </form>
            </div>*@
    </div>
</div>
</div>
<div class="books flex">
    <div class="row" style="margin-right:0 !important; margin-left:0 !important">
        @foreach (var book in Model.Books)
        {
            <div class="col-4 ">
                <div class="list-group" style="max-height:280px;">
                    <li class="list-group-item list-group-item-action flex-column align-items-start" style="height:280px;">
                        <div class="d-flex w-100 justify-content-between">
                            <h5 class="mb-1">
                                <b>"@book.Name"</b>
                                <br />@book.Author
                            </h5>
                            <small>@book.Created.Value.ToShortDateString()</small>
                        </div>
                        <p class="mb-1">
                            @if (@book.CoverUrl != null)
                            {
                                <img src=@ExBook.Extensions.BookCoverExtensions.GetMediumCoverUrl(@book.CoverUrl) alt="Cover" style="width:110px;height:160px;" id="test" onclick="Open('@book.CoverUrl');" />
                            }
                            else
                            {
                                <img src="https://icons.iconarchive.com/icons/papirus-team/papirus-status/256/image-missing-icon.png" onclick="Open('https://icons.iconarchive.com/icons/papirus-team/papirus-status/256/image-missing-icon.png');" alt="Cover" style="width:110px;height:160px;">
                            }
                            <div class="btn-group float-right" role="group" aria-label="Basic example">
                                @if (CheckBookshelves(Model.UserId, @book))
                                {
                                    <form asp-controller="Search" asp-route-id="@book.Id" asp-action="GetBookshelvesForBook" method="post">
                                      
                                        <button type="submit" class="btn btn-primary btn-sm" title="Show available books">
                                            <i class="fas fa-book-medical"></i>
                                        </button>
                                    </form>
                                }
                                else
                                {
                                    <span title="Sorry, currently there is no bookshelf containing this book">
                                        <div class="disabledGet">
                                          
                                            <button type="submit" disabled class="btn btn-secondary btn-sm">
                                                <i class="fas fa-book-medical"></i>
                                            </button>
                                        </div>
                                    </span>
                                }
                                @if (!GetIsOnWishlist(Model.UserId, @book))
                                {                                  
                                    <button type="submit" class="btn btn-primary btn-sm" id="@book.Id"
                                            onclick="addToWishList('@book.Id');" title="Add this book to your wishlist">
                                        <i class="fas fa-plus"></i>
                                    </button>

                                }
                                else
                                {
                                    <button type="submit" class="btn btn-secondary btn-sm" id="@book.Id"
                                            onclick="addToWishList('@book.Id');" title="This book is already on your wishlist">
                                        <i class="fas fa-plus"></i>
                                    </button>

                                }
                            </div>
                        </p>
                        <small>@GetSubjects(@book)</small>
                    </li>
                </div>
            </div>
        }
    </div>
</div>


@functions { bool GetIsOnWishlist(Guid Id, ExBook.Data.Book book)
    {
        return book.WishListBooks.Any(wlb => wlb.WishList.UserId == Id);
    }
    bool CheckBookshelves(Guid Id, ExBook.Data.Book book)
    {
        if (book.BookShelfBooks.Count > 0)
        {
            if (book.BookShelfBooks.Count == 1 && book.BookShelfBooks.Any(bsb => bsb.BookShelf.UserId == Id))
                return false;
            else
                return true;
        }
        else
            return false;
    }

    string GetSubjects(ExBook.Data.Book book)
    {
        return String.Join(',', book.Subjects.Select(s => s.Name));
    }

}

<style>
    /*        .searchbar-card {
                max-width: 500px;
                margin: 0 auto;
            }

            @@media screen and ( min-height: 400px ) {
                .searchbar-card {
                    margin-top: calc(50vh - 200px);
                }
            }*/
    .disabledGet {
        pointer-events: none;
    }
</style>
@section Scripts
{
    <script type="text/javascript">
    function addToWishList(Id) {
        {
            $.ajax({
                url: '/search/AddToWishList',
                data: { Id: Id },
                type: 'POST'
            }).done(function (response) {
                if (response == true) {
                    if ($(document.getElementById(Id)).hasClass('btn-primary')) {
                        $(document.getElementById(Id)).removeClass('btn-primary').addClass('btn-secondary');
                    }
                    else {
                        $(document.getElementById(Id)).removeClass('btn-secondary').addClass('btn-primary');
                    }

                }
            });
        }
    }

    function Open(cover) {
                $.ajax({
                    type: "Get",
                    url: '@Url.Action("FullSizeCover", "Search")',
                    data: { Cover: cover },
                    success: function (data) {
                        $('#coverModal').html(data);
                        $('#coverModal').modal('show');
                    }
                })
    };

    window.onload = function () {
        document.getElementById('FilterTitle').value = "@Model.FilterTitle";
        document.getElementById('FilterAuthor').value = "@Model.FilterAuthor";
    };


    </script>
}
