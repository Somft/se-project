@using ExBook.Extensions
@using ExBook.Data

<!DOCTYPE html>

<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>@(ViewData["Title"] ?? "ExBook")</title>
    <link href="~/Styles/Site.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.0/css/all.css" integrity="sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ" crossorigin="anonymous">
    <link rel="stylesheet" href="~/Content/Styles/styles.css">
</head>
<body>

    <header>
        <nav class="navbar navbar-expand-lg navbar-light bg-light">
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo03" aria-controls="navbarTogglerDemo03" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <a class="navbar-brand" href="@Url.Action("Index", "Home")">ExBook</a>

            @if (Context.User.Identity.IsAuthenticated)
            {
                <div class="collapse navbar-collapse" id="navbarTogglerDemo03">
                    <ul class="navbar-nav mr-auto mt-2 mt-lg-0">
                        <li class="nav-item">

                            <a class="nav-link" href="@Url.Action("Index", "UserAccount")"><i class="far fa-user"></i> My Account</a>

                        </li>
                        <li class="nav-item">

                            <a class="nav-link" href="@Url.Action("Index", "WishList")"><i class="fas fa-list"></i> Wishlist</a>

                        </li>

                        <li class="nav-item">

                            <a class="nav-link" href="@Url.Action("UserTransactions", "Transaction")">
                                <i class="fas fa-book"></i>
                                Transactions
                                @{int transactions = GetTransactions();}

                                @if (transactions > 0)
                                {
                                    <span class="badge badge-pill badge-info">@transactions</span>
                                }

                            </a>

                        </li>

                        <li class="nav-item">
                            <form asp-area="" asp-controller="Authentication" asp-action="Logout" id="logoutForm">
                                <a class="nav-link" href="@Url.Action("Logout", "Authentication")" id="submitLogout"><i class="fas fa-sign-out-alt"></i> Logout</a>
                            </form>
                        </li>


                    </ul>

                    <form asp-controller="Search" asp-action="Index" method="get" class="form-inline my-2 my-lg-0">
                        <input class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search" name="filterTitle">
                        <button class="btn btn-outline-primary my-2 my-sm-0" type="submit">
                            <i class="fas fa-search"></i>
                        </button>
                    </form>
                </div>
            }
        </nav>



    </header>

    @RenderBody()

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.1/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.11/jquery.validate.unobtrusive.min.js"></script>

    <script>
        jQuery.validator.setDefaults({
            highlight: function (element) {
                jQuery(element).closest('.form-control').addClass('is-invalid');
            },
            unhighlight: function (element) {
                jQuery(element).closest('.form-control').removeClass('is-invalid');
            },
            errorElement: 'span',
            errorClass: 'label label-danger',
        });

        $(function () {
            $("#submitLogout").click(function () {
                document.getElementById("logoutForm").submit();
                return false;
            });
        });
    </script>






    @RenderSection("Scripts", required: false)
</body>
</html>

<style>
    .navbar
    {
    }

    .hover
    {
        overflow: hidden;
        position: relative;
        padding-bottom: 60%;
    }

    .hover-overlay
    {
        width: 100%;
        height: 200%;
        position: absolute;
        top: 0;
        left: 0;
        z-index: 90;
        transition: all 0.4s;
    }

    .hover img
    {
        width: 100%;
        position: absolute;
        top: 0;
        left: 0;
        transition: all 0.3s;
    }

    .hover-content
    {
        position: relative;
        z-index: 99;
    }

    .hover-1 img
    {
        width: 105%;
        position: absolute;
        top: 0;
        left: -5%;
        transition: all 0.3s;
    }

    .hover-1-content
    {
        position: absolute;
        bottom: 0;
        left: 0;
        z-index: 99;
        transition: all 0.4s;
    }

    .hover-1 .hover-overlay
    {
        background: rgba(0, 0, 0, 0.5);
    }

    .hover-1-description
    {
        transform: translateY(0.5rem);
        transition: all 0.4s;
        opacity: 0;
    }

    .hover-1:hover .hover-1-content
    {
        bottom: 2rem;
    }

    .hover-1:hover .hover-1-description
    {
        opacity: 1;
        transform: none;
    }

    .hover-1:hover img
    {
        left: 0;
        margin-left: auto;
        margin-right: auto;
    }

    .hover-1:hover .hover-overlay
    {
        opacity: 0;
    }

    .container
    {
        margin-top: 10%;
    }

    .book
    {
        position: relative;
        overflow: hidden;
    }

        .book:before
        {
            position: absolute;
            content: '';
            width: 80%;
            height: 220%;
            background: rgba(77, 175, 124, 0.8);
            top: -50%;
            left: -100%;
            z-index: 1;
            transform: rotate(15deg);
            transform-origin: center top 0;
            transition: .5s;
        }

        .book:hover:before
        {
            left: 10%;
        }

        .book img
        {
            width: 100%;
            height: auto;
        }

    .book-text
    {
        width: 100%;
        padding: 0 18px;
        position: absolute;
        top: -100%;
        color: #fff;
        left: 0;
        z-index: 2;
        transition: 1.1s;
    }

        .book-text h3
        {
            font-family: poppins;
        }

    .book:hover .book-text
    {
        top: 3px;
    }

    .social a
    {
        font-size: 4.5em;
        padding: 3rem;
    }

    .fa-facebook
    {
        color: #3b5998;
    }

    .fa-instagram
    {
        color: #517fa4;
    }

    .fa-youtube
    {
        color: #bb0000;
    }

        .fa-facebook:hover,
        .fa-instagram:hover,
        .fa-youtube:hover
        {
            color: darkgreen;
        }

    footer
    {
        background-color: #3f3f3f;
        color: #d5d5d5;
        padding-top: 2rem;
    }

    hr.light
    {
        border-top: 1px solid #d5d5d5;
        width: 75%;
        margin-top: .8rem;
        margin-bottom: 1rem;
    }
</style>


@functions {
    @inject ExBook.Data.ApplicationDbContext ApplicationDbContext

    private int GetTransactions()
    {
        if (!this.Context.User.GetId().HasValue)
        {
            return 0;
        }

        return ApplicationDbContext.Transactions
            .Where(t => t.RecipientId == this.Context.User.GetId())
            .Where(t => t.Status == Transaction.Statuses.Initialized)
            .Count();
    }
}
